// <auto-generated />
using System;
using BlackJack.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackJack.Data.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250922101538_balancesCorrectos")]
    partial class balancesCorrectos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlackJack.Domain.Models.Game.BlackjackTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DealerHandId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DealerHandId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Status");

                    b.ToTable("BlackjackTables", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.GameRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlackjackTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("int");

                    b.Property<Guid>("HostPlayerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HostPlayerId");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<decimal>("MinBetPerRound")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MinBetPerRound");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HostPlayerId");

                    b.HasIndex("MinBetPerRound");

                    b.HasIndex("Name");

                    b.HasIndex("RoomCode")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("GameRooms", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.Hand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cards");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Hands_CreatedAt");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Hands_Status");

                    b.ToTable("Hands", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.RoomPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GameRoomId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasPlayedTurn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReady")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViewer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastActionAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PlayerEntityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlayerEntityId");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlayerId");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("SeatPosition")
                        .HasColumnType("int")
                        .HasColumnName("SeatPosition");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId1");

                    b.HasIndex("PlayerEntityId")
                        .HasDatabaseName("IX_RoomPlayers_PlayerEntityId");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("IX_RoomPlayers_PlayerId");

                    b.HasIndex("Position")
                        .HasDatabaseName("IX_RoomPlayers_Position");

                    b.HasIndex("SeatPosition")
                        .HasDatabaseName("IX_RoomPlayers_SeatPosition");

                    b.HasIndex("GameRoomId", "SeatPosition")
                        .HasDatabaseName("IX_RoomPlayers_GameRoomId_SeatPosition");

                    b.ToTable("RoomPlayers", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Position");

                    b.HasIndex("TableId");

                    b.ToTable("Seats", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.Spectator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameRoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameRoomId");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlayerId");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId")
                        .HasDatabaseName("IX_Spectators_GameRoomId");

                    b.HasIndex("JoinedAt")
                        .HasDatabaseName("IX_Spectators_JoinedAt");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Spectators_Name");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("IX_Spectators_PlayerId");

                    b.ToTable("Spectators", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Users.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_handIdsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HandIds");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Players", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Users.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalGamesPlayed")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles", "dbo");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.BlackjackTable", b =>
                {
                    b.OwnsOne("BlackJack.Domain.Models.Betting.Money", "MaxBet", b1 =>
                        {
                            b1.Property<Guid>("BlackjackTableId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MaxBet");

                            b1.HasKey("BlackjackTableId");

                            b1.ToTable("BlackjackTables", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("BlackjackTableId");
                        });

                    b.OwnsOne("BlackJack.Domain.Models.Betting.Money", "MinBet", b1 =>
                        {
                            b1.Property<Guid>("BlackjackTableId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MinBet");

                            b1.HasKey("BlackjackTableId");

                            b1.ToTable("BlackjackTables", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("BlackjackTableId");
                        });

                    b.Navigation("MaxBet")
                        .IsRequired();

                    b.Navigation("MinBet")
                        .IsRequired();
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.RoomPlayer", b =>
                {
                    b.HasOne("BlackJack.Domain.Models.Game.GameRoom", "GameRoom")
                        .WithMany("Players")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlackJack.Domain.Models.Game.GameRoom", null)
                        .WithMany("SeatedPlayers")
                        .HasForeignKey("GameRoomId1");

                    b.HasOne("BlackJack.Domain.Models.Users.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameRoom");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.Seat", b =>
                {
                    b.HasOne("BlackJack.Domain.Models.Users.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BlackJack.Domain.Models.Game.BlackjackTable", null)
                        .WithMany("Seats")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.Spectator", b =>
                {
                    b.HasOne("BlackJack.Domain.Models.Game.GameRoom", "GameRoom")
                        .WithMany("Spectators")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Spectators_GameRooms_GameRoomId");

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Users.Player", b =>
                {
                    b.OwnsOne("BlackJack.Domain.Models.Betting.Money", "Balance", b1 =>
                        {
                            b1.Property<Guid>("PlayerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Balance");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.OwnsOne("BlackJack.Domain.Models.Users.PlayerId", "PlayerId", b1 =>
                        {
                            b1.Property<Guid>("PlayerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlayerId");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.Navigation("Balance")
                        .IsRequired();

                    b.Navigation("PlayerId")
                        .IsRequired();
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Users.UserProfile", b =>
                {
                    b.OwnsOne("BlackJack.Domain.Models.Betting.Money", "Balance", b1 =>
                        {
                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Balance");

                            b1.HasKey("UserProfileId");

                            b1.ToTable("UserProfiles", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.OwnsOne("BlackJack.Domain.Models.Users.PlayerId", "PlayerId", b1 =>
                        {
                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlayerId");

                            b1.HasKey("UserProfileId");

                            b1.ToTable("UserProfiles", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.OwnsOne("BlackJack.Domain.Models.Betting.Money", "TotalWinnings", b1 =>
                        {
                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TotalWinnings");

                            b1.HasKey("UserProfileId");

                            b1.ToTable("UserProfiles", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.Navigation("Balance")
                        .IsRequired();

                    b.Navigation("PlayerId")
                        .IsRequired();

                    b.Navigation("TotalWinnings")
                        .IsRequired();
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.BlackjackTable", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("BlackJack.Domain.Models.Game.GameRoom", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("SeatedPlayers");

                    b.Navigation("Spectators");
                });
#pragma warning restore 612, 618
        }
    }
}
